name: infra_actions

on: [push]

jobs:
  flake8_and_unittests:  # проверка на PEP8 и unittests
    runs-on: ubuntu-latest  # настройки окружения(runner)

    steps:  # перечень шагов
    - name: Clone the repository
      uses: actions/checkout@v2  # предустановленный action для клонирования репозитория
    - name: Set up Python
      uses: actions/setup-python@v2  # предустановленный action для установки Python-окружения
      with:
        python-version: 3.7

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r requirements.txt 

    - name: Test with flake8 and django tests
      run: |
        python -m flake8
        cd infra_project/
        python manage.py test
  
  build_image_and_push_new_image_to_docker_hub:
    runs-on: ubuntu-latest
    needs: flake8_and_unittests

    steps:
      - name: Clone the repository
        uses: actions/checkout@v2  # предустановленный action для клонирования репозитория

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1  # вызов сборщика контейнеров docker

      - name: Login to Docker
        uses: docker/login-action@v1  # login docker
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2  # отправка нового образа в dockerhub
        with:
          push: true
          tags: yoxyyyy/infra_actions:latest

  connect_to_remote_server_download_new_image_and_start_container:
    runs-on: ubuntu-latest
    needs: build_image_and_push_new_image_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
 
          script: |
            sudo docker pull yoxyyyy/infra_actions
            sudo docker stop $(sudo docker ps -a -q)
            sudo docker run --rm -d -p 8001:8001 yoxyyyy/infra_actions